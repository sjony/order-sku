<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns="http://www.springframework.org/schema/beans"
	xmlns:p="http://www.springframework.org/schema/p"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
	 http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
     http://www.springframework.org/schema/cache   
     http://www.springframework.org/schema/cache/spring-cache-3.2.xsd">



	<!-- ================= Memcached 缓存相关配置 ================== -->
	<bean name="memcachedClientBuilder" class="net.rubyeye.xmemcached.XMemcachedClientBuilder">
		<constructor-arg>
			<list>
				<bean class="java.net.InetSocketAddress">
					<constructor-arg>
						<value>${memcached.server}</value>
					</constructor-arg>
					<constructor-arg>
						<value>${memcached.port}</value>
					</constructor-arg>
				</bean>
			</list>
		</constructor-arg>
		<constructor-arg>
			<list>
				<value>${memcached.weight}</value>
			</list>
		</constructor-arg>
		<property name="connectionPoolSize" value="2"></property>
		<property name="commandFactory">
			<bean class="net.rubyeye.xmemcached.command.TextCommandFactory"></bean>
		</property>
		<property name="sessionLocator">
			<bean class="net.rubyeye.xmemcached.impl.KetamaMemcachedSessionLocator"></bean>
		</property>
		<property name="transcoder">
			<bean class="net.rubyeye.xmemcached.transcoders.SerializingTranscoder" />
		</property>
	</bean>

	<bean name="memcachedClient" factory-bean="memcachedClientBuilder"
		factory-method="build" destroy-method="shutdown" />

	<bean name="memcachedCacheClient" class="com.sjony.cache.MemcachedCacheClient">
		<constructor-arg index="0" ref="memcachedClient" />
	</bean>
	<bean id="libraryMemCache" class="com.sjony.usecache.LibraryMemCache"
		autowire="byType">
		<constructor-arg index="0" ref="memcachedCacheClient" />
	</bean>
	<!-- ================= // Memcached 缓存相关配置 END ================== -->

	<!-- ================= Redis 缓存相关配置 ================== -->
	<!-- <bean id="poolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxIdle" value="${redis.maxIdle}" /> <property name="maxWaitMillis"
		value="${redis.maxWait}" /> <property name="testOnBorrow" value="${redis.testOnBorrow}"
		/> </bean> <bean id="connectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory"
		p:host-name="${redis.host}" p:port="${redis.port}" p:pool-config-ref="poolConfig"
		p:database="${redis.database}" /> <bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="connectionFactory" /> </bean> <bean
		name="redisCacheClient" class="hhj.demo.cache.RedisCacheClient"> <constructor-arg
		index="0" ref="redisTemplate" /> </bean> -->
	<!-- ================= // Redis 缓存相关配置 END ================== -->


	<!-- ================ Spring 缓存管理 @Cachable ==================== -->
	<!-- <bean id="cacheManager" class="com.sjony.cache.CacheManager"> <property
		name="cacheClient" ref="memcachedCacheClient" /> <property name="cacheClient"
		ref="redisCacheClient" /> <property name="configMap"> <map> key：@Cacheable、@CachePut、@CacheEvict等的name属性。value：缓存过期时间(单位：秒)，默认值：0
		<entry key="secretCache" value="86400" /> <entry key="apiCache" value="10800"
		/> </map> </property> </bean> <cache:annotation-driven cache-manager="cacheManager"
		/> -->

</beans>